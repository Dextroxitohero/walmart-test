{"version":3,"sources":["types/types.js","reducers/usersReducer.js","reducers/itemsReducer.js","reducers/rootReducer.js","store/store.js","actions/users.js","components/Users.js","actions/items.js","components/Demographic.js","App.js","index.js"],"names":["types","initialState","users","userDemographic","items","itemActivo","rootReducer","combineReducers","state","action","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","setUsers","Users","dispatch","useDispatch","useEffect","a","url","process","axios","get","headers","res","data","message","console","log","useSelector","className","scope","map","user","username","age","baseUrl","setItems","setItemActivo","item","setUserDemographic","Demographic","onChange","e","preventDefault","target","value","selected","colspan","info","counter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d792e328.chunk.js","sourcesContent":["\r\nexport const types = { \r\n    usersLoad: '[users] Load Users',\r\n    setDemographic: '[users] Load setDemographic',\r\n\r\n    itemsLoad: '[items] Load Items',\r\n    itemActive: '[] Set Active Item'\r\n}","import { types } from '../types/types'\r\nconst initialState = {\r\n    users: [],\r\n    userDemographic: []\r\n}\r\n\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.usersLoad:\r\n            return {\r\n                ...state,\r\n                users: [...action.payload]\r\n            }\r\n\r\n        case types.setDemographic:\r\n            return {\r\n                ...state,\r\n                userDemographic: [...action.payload]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}","import { types } from '../types/types'\r\nconst initialState = {\r\n    items: [],\r\n    itemActivo: null\r\n}\r\n\r\n\r\nexport const itemsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.itemsLoad:\r\n            return {\r\n                ...state,\r\n                items: [...action.payload]\r\n            }\r\n\r\n        case types.itemActive:\r\n            return {\r\n                ...state,\r\n                itemActivo: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { usersReducer } from './usersReducer'\r\nimport { itemsReducer } from './itemsReducer'\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    users: usersReducer,\r\n    items: itemsReducer\r\n})\r\n\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n\r\n","import axios from 'axios'\r\nimport { types } from '../types/types'\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport const startLoadingUsers = () => {\r\n    return async (dispatch) => {\r\n        const url = `${baseUrl}users`\r\n\r\n        const res = await axios.get(url, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n\r\n        if(res.data.message === 'ok'){\r\n            dispatch(setUsers(res.data.data))\r\n        }else{\r\n            console.log(res.data.message)\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setUsers = (users) => ({\r\n    type: types.usersLoad,\r\n    payload: users\r\n});\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startLoadingUsers } from '../actions/users'\r\n\r\n\r\n\r\n\r\nexport const Users = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(startLoadingUsers())\r\n    }, [dispatch])\r\n\r\n\r\n    const { users } = useSelector(state => state.users)\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='mt-5'>\r\n            <h4>Users and their age</h4>\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Age</th>\r\n                        <th scope=\"col\">Count</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.map(user => {\r\n                            return (\r\n\r\n                                <tr key={user.username}>\r\n                                    <td>{user.username}</td>\r\n                                    <td>{user.age}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport { types } from '../types/types'\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport const startLoadingItems = () => {\r\n    return async (dispatch) => {\r\n        const url = `${baseUrl}items`\r\n\r\n        const res = await axios.get(url, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n\r\n        if(res.data.message === 'ok'){\r\n            dispatch(setItems(res.data.data))\r\n        }else{\r\n            console.log(res.data.message)\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const setItems = (items) => ({\r\n    type: types.itemsLoad,\r\n    payload: items\r\n});\r\n\r\n\r\nexport const startLoadDemographic = (item) => {\r\n    return async (dispatch) => {\r\n        const url = `${baseUrl}users/age/${item}`\r\n\r\n        const res = await axios.get(url, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n\r\n        if(res.data.message === 'ok'){\r\n            dispatch(setItemActivo(item))\r\n            dispatch(setUserDemographic(res.data.data))\r\n        }else{\r\n            console.log(res.data.message)\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const setItemActivo = (item) =>({\r\n    type: types.itemActive,\r\n    payload: item\r\n})\r\n\r\nexport const setUserDemographic = (items) => ({\r\n    type: types.setDemographic,\r\n    payload: items\r\n});\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startLoadingItems, startLoadDemographic, setItemActivo } from '../actions/items'\r\n\r\n\r\nexport const Demographic = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(startLoadingItems())\r\n    }, [dispatch])\r\n\r\n\r\n    const { items } = useSelector(state => state.items)\r\n    const { itemActivo } = useSelector(state => state.items)\r\n    const { userDemographic } = useSelector(state => state.users)\r\n\r\n\r\n\r\n    const handleChangeSelectItem = (e) => {\r\n        e.preventDefault()\r\n        if (e.target.value !== '') {\r\n            dispatch(startLoadDemographic(e.target.value))\r\n        } else {\r\n            dispatch(setItemActivo(null))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='mt-5'>\r\n            <h4 className='mb-5'>Age Demographic of users With { itemActivo }</h4>\r\n\r\n            <select\r\n                className=\"custom-select mb-5\"\r\n                onChange={handleChangeSelectItem}\r\n            >\r\n                <option value='' selected>Item</option>\r\n\r\n                {\r\n                    items.map(item => {\r\n                        return (\r\n                            <option value={item} key={item}>{item}</option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n\r\n\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Age</th>\r\n                        <th scope=\"col\">Count</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        itemActivo === null\r\n                            ? <tr><td colspan=\"2\" className='text-center'>Select item </td></tr>\r\n                            : userDemographic.map(info => \r\n                                \r\n                                    <tr key={info.age}>\r\n                                        <td>{info.age}</td>\r\n                                        <td>{info.counter}</td>\r\n                                    </tr>\r\n                                )\r\n                            \r\n\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\n\r\nimport { Users } from './components/Users'\r\nimport { Demographic } from './components/Demographic'\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <h1>All Users</h1>\r\n            <hr />\r\n            <Users />\r\n            <Demographic />\r\n        </Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import reportWebVitals from './reportWebVitals';\nimport { App } from './App'\nReactDOM.render(<React.StrictMode >\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n    );\n\n    // If you want to start measuring performance in your app, pass a function\n    // to log results (for example: reportWebVitals(console.log))\n    // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n    // reportWebVitals();"],"sourceRoot":""}